USE GS_FACT_03;
GO
CREATE TABLE PAGO(
	ID_PAGO INT IDENTITY(1,1),
	FECHA_PAGO DATE NOT NULL,
	METODO_PAGO VARCHAR(30) NOT NULL,
	EFECTIVO FLOAT NOT NULL,
	ID_CLIENTE INT
);

GO
CREATE PROCEDURE NUEVO_PAGO
	     @CODIGO_CLIENTE int,
	     @FECHA DATE,
	     @METODO_PAGO VARCHAR(30),
	     @EFECTIVO FLOAT
AS
BEGIN
	    IF EXISTS(SELECT ID_CLIENTE FROM CLIENTE WHERE ID_CLIENTE = @CODIGO_CLIENTE OR CEDULA=@CODIGO_CLIENTE)
	    BEGIN
		        INSERT INTO PAGO (FECHA_PAGO,METODO_PAGO,EFECTIVO,ID_CLIENTE) 
		        VALUES(@FECHA,UPPER(@METODO_PAGO),ROUND(@EFECTIVO,2),
			       (SELECT ID_CLIENTE FROM CLIENTE WHERE ID_CLIENTE = @CODIGO_CLIENTE OR CEDULA=@CODIGO_CLIENTE)
		        );
		        SELECT 'Pago realizado con éxito';
		        RETURN;
	    END
	    SELECT 'Código de Cliente no encontrado';
END

GO
CREATE PROCEDURE CONSULTAR_PAGOS
AS
BEGIN
	     SELECT ID_PAGO,FECHA_PAGO,METODO_PAGO,EFECTIVO
	     FROM PAGO;
END

GO
CREATE PROCEDURE ACTUALIZAR_PAGO
	     @ID_PAGO int,
	     @FECHA DATE,
	     @METODO_PAGO VARCHAR(30),
	     @VALOR FLOAT
AS
BEGIN
	     UPDATE PAGO
	     SET FECHA_PAGO = @FECHA,
		          METODO_PAGO = UPPER(@METODO_PAGO),
		          EFECTIVO = ROUND(@VALOR,2)
	     WHERE ID_PAGO=@ID_PAGO;
	     SELECT 'Los datos del Cliente se han actualizado.';
END

GO
CREATE PROCEDURE ELIMINAR_PAGO
	@ID_PAGO int
AS
BEGIN
	DELETE FROM PAGO WHERE ID_PAGO = @ID_PAGO;
END